{
	"meta": {
		"generatedAt": "2025-09-24T02:01:56.254Z",
		"tasksAnalyzed": 10,
		"totalTasks": 10,
		"analysisCount": 10,
		"thresholdScore": 5,
		"projectName": "Taskmaster",
		"usedResearch": false
	},
	"complexityAnalysis": [
		{
			"taskId": 1,
			"complexityScore": 8,
			"recommendedSubtasks": 6,
			"expansionPrompt": "사용자 인증 시스템을 데이터베이스 설계, 엔티티 구현, Spring Security 설정, JWT 토큰 관리, API 구현, 테스트 작성으로 세분화하여 각 단계별로 구체적인 작업 항목을 정의해주세요.",
			"reasoning": "Spring Security, JWT, 다중 권한 관리, 휴대폰 인증 등 복잡한 보안 요소들이 포함되어 있고, 전체 시스템의 기반이 되는 핵심 기능이므로 높은 복잡도를 가집니다. 데이터베이스 설계부터 보안 테스트까지 다양한 영역의 작업이 필요합니다."
		},
		{
			"taskId": 2,
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "차량 관리 시스템을 데이터베이스 설계, 엔티티 및 MyBatis 매핑 구현, 차량 CRUD API 구현, 파일 업로드 기능, 테스트 작성으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "차량 정보 관리, 정비 이력 추적, 파일 업로드 등의 기능이 포함되어 있지만 비교적 표준적인 CRUD 작업이 중심이므로 중간 정도의 복잡도를 가집니다. MyBatis 매핑과 소유권 검증 로직이 추가적인 복잡성을 제공합니다."
		},
		{
			"taskId": 3,
			"complexityScore": 7,
			"recommendedSubtasks": 6,
			"expansionPrompt": "정비소 관리 시스템을 데이터베이스 설계, 엔티티 구현, 위치 기반 검색 기능, 정비소 관리 API, 평점 집계 기능, 테스트 작성으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "위치 기반 검색, 다중 엔티티 관계 관리, 평점 집계 등 복잡한 비즈니스 로직이 포함되어 있습니다. 특히 지리적 데이터 처리와 권한별 API 분리가 추가적인 복잡성을 제공합니다."
		},
		{
			"taskId": 4,
			"complexityScore": 9,
			"recommendedSubtasks": 7,
			"expansionPrompt": "예약 시스템을 데이터베이스 설계, 예약 로직 구현, 시간 충돌 검증, 동시성 제어, 상태 관리, API 구현, 테스트 작성으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "예약 시간 충돌 방지, 동시성 제어, 복잡한 상태 관리, 알림 연동 등 매우 복잡한 비즈니스 로직이 포함되어 있습니다. 여러 시스템과의 의존성과 실시간 처리 요구사항이 높은 복잡도를 만듭니다."
		},
		{
			"taskId": 5,
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "견적 관리 시스템을 데이터베이스 설계, 견적 계산 로직 구현, 견적서 CRUD API, 승인/거부 프로세스, 배치 작업 및 테스트로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "견적 계산, 세금 처리, 유효기간 관리 등의 비즈니스 로직이 포함되어 있지만 상대적으로 독립적인 기능들로 구성되어 있어 중간 정도의 복잡도를 가집니다."
		},
		{
			"taskId": 6,
			"complexityScore": 7,
			"recommendedSubtasks": 5,
			"expansionPrompt": "정비 프로세스 시스템을 데이터베이스 설계, 단계별 상태 관리 로직, 진행률 계산 기능, API 구현, 알림 연동 및 테스트로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "복잡한 상태 머신 관리, 실시간 추적, 알림 연동 등이 포함되어 있어 높은 복잡도를 가집니다. 특히 단계별 전환 로직과 타임라인 관리가 복잡성을 증가시킵니다."
		},
		{
			"taskId": 7,
			"complexityScore": 9,
			"recommendedSubtasks": 7,
			"expansionPrompt": "결제 시스템을 데이터베이스 설계, PG사 연동 구현, 결제 처리 로직, 환불 관리, 웹훅 처리, 배치 작업, 보안 테스트로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "외부 PG사 연동, 금융 거래 처리, 보안 요구사항, 환불 로직, 실패 처리 등 매우 높은 복잡도와 신뢰성이 요구되는 시스템입니다. 특히 결제 데이터의 정합성과 보안이 중요합니다."
		},
		{
			"taskId": 8,
			"complexityScore": 5,
			"recommendedSubtasks": 4,
			"expansionPrompt": "리뷰 평점 시스템을 데이터베이스 설계, 리뷰 CRUD 및 답글 기능, 평점 집계 로직, 파일 업로드 및 신고 기능으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "리뷰 관리, 평점 계산, 답글 기능 등 상대적으로 표준적인 기능들로 구성되어 있어 중간 이하의 복잡도를 가집니다. 평점 집계 로직이 주요 복잡성 요소입니다."
		},
		{
			"taskId": 9,
			"complexityScore": 8,
			"recommendedSubtasks": 6,
			"expansionPrompt": "알림 시스템을 데이터베이스 설계, 알림 템플릿 관리, 다중 채널 발송 구현, 사용자 설정 관리, 배치 작업, 실패 처리 로직으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "다중 채널 지원, 템플릿 기반 메시지 생성, 배치 처리, 실패 재시도 등 복잡한 기능들이 포함되어 있습니다. 특히 모든 시스템과의 연동이 필요하여 높은 복잡도를 가집니다."
		},
		{
			"taskId": 10,
			"complexityScore": 8,
			"recommendedSubtasks": 6,
			"expansionPrompt": "관리자 시스템을 데이터베이스 설계, 통계 집계 로직, 대시보드 API, 관리 기능, 권한 제어, 모니터링 기능으로 세분화하여 각 단계별 작업을 정의해주세요.",
			"reasoning": "복잡한 통계 계산, 다양한 관리 기능, 권한별 접근 제어, 실시간 모니터링 등이 포함되어 있어 높은 복잡도를 가집니다. 모든 시스템의 데이터를 종합하여 처리해야 하는 복잡성이 있습니다."
		}
	]
}